{"version":3,"sources":["util/APIUtils.ts","components/ShotVisualizer/ShotVisualizer.tsx","util/AnalyticsUtils.ts","components/DataTable/DataTable.tsx","components/Scorebug/Scorebug.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EVENT_IDS","getScoresAPIData","date","a","Promise","resolve","reject","apiCall","axios","get","then","json","data","dates","length","games","forEach","game","gamePk","homeTeamID","teams","home","team","id","awayTeamID","away","awayTeamScore","score","gameData","homeTeamScore","homeTeamName","name","awayTeamName","push","catch","getGameAPIData","gamePK","scoringPlays","liveData","plays","periodPlays","playsByPeriod","lastIndex","endIndex","spStartIndex","startIndex","spEndIndex","homeID","awayID","missedShots","allPlays","play","includes","result","eventTypeId","about","eventIdx","coords","eventIDx","x","parseInt","coordinates","y","eventTypeID","teamID","players","player","playerData","fullName","playerType","iPlay","homeStatsRaw","boxscore","teamStats","teamSkaterStats","homeGoals","goals","homeBlocks","blocked","homeShots","shots","homeRinkSide","linescore","periods","rinkSide","homeGoalieIDs","goalies","homeGoalies","key","goalieRaw","goalie","person","saves","stats","goalieStats","savePercentage","homeStats","startingRinkSide","blocks","missed","awayStatsRaw","awayGoals","awayBlocks","awayShots","awayRinkSide","awayGoalieIDs","awayGoalies","awayStats","ShotVisualizer","props","ref","useRef","VALID_SHOTS","AWAY_COLOUR","RINK_HEIGHT","useEffect","console","log","drawRink","svg","d3","current","append","classed","attr","RINK_WIDTH","drawVerticalLine","drawCircle","drawRectangle","drawBaseRink","plotGoals","plotShotHeatMap","goal","scoringPlay","find","colour","coord","rebaseCoordinate","generateHeatArray","startCol","endCol","startRow","endRow","output","i","j","generateColourScale","domain","range","heatArrayAway","heatArrayHome","array","addToHeatArray","colorScaleHome","colorScaleAway","awayLayer","drawHeatMap","heatArray","colourScale","selectAll","enter","d","homeSide","height","width","style","radius","fill","className","getPDO","homeSavePercent","awaySavePercent","sum","Math","round","getSavePercentage","shootingPercentage","homePercentage","awayPercentage","getShootingPercentage","DataTable","getRowData","homeTeam","corsi","homeCF","homeCorsiPercent","getCorsiForPercent","gameDetails","pdo","rows","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","sx","border","scope","Scorebug","IMG_SRC","onClick","cardClicked","alt","src","index","App","getGameData","res","setGameData","YESTERDAY","Date","getTime","useState","selectedDate","setSelectedDate","currentGames","setCurrentGames","selectedGame","setSelectedGame","selectedGameData","setSelectedGameData","getScores","dateToString","toISOString","split","handleCardClicked","newDate","getDay","getMonth","getDate","setHours","Modal","open","onClose","target","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b60cd3da.chunk.js","sourcesContent":["import { IAPIGameDetails, IAPIGameScore, IAPIScoreResults, IGoalie, IPeriodPlay, IPlay, IPlayer, ITeamStats } from \"./types/APITypes\";\nimport axios from \"axios\";\n\nconst EVENT_IDS = ['GOAL','SHOT','MISSED_SHOT','BLOCKED_SHOT']\n\nexport const getScoresAPIData = async (date: string): Promise<IAPIScoreResults> => {\n\n    return new Promise( (resolve, reject) => {\n        const apiCall = `https://statsapi.web.nhl.com/api/v1/schedule?startDate=${date}&endDate=${date}`;\n\n        axios.get(apiCall)\n        .then( (json) => {\n            if (json.data.dates && json.data.dates.length === 1){\n                var games: IAPIGameScore[] = [];\n                json.data.dates[0].games.forEach( (game : any) => {\n                    const gamePk: number = game.gamePk;\n                    const homeTeamID = game.teams.home.team.id;\n                    const awayTeamID = game.teams.away.team.id;\n                    const awayTeamScore = game.teams.away.score;\n                    const homeTeamScore = game.teams.home.score;\n                    const homeTeamName = game.teams.home.team.name;\n                    const awayTeamName = game.teams.away.team.name;\n                    const gameData: IAPIGameScore = {\n                        gamePk: gamePk,\n                        homeTeamID: homeTeamID,\n                        homeTeamScore: homeTeamScore,\n                        awayTeamID: awayTeamID,\n                        awayTeamScore: awayTeamScore,\n                        homeTeamName: homeTeamName,\n                        awayTeamName: awayTeamName\n                    }\n                    games.push(gameData);\n                });\n                const output: IAPIScoreResults = {\n                    date: date,\n                    games: games\n                }\n                return resolve(output);\n            }\n            else {\n                return reject(null);\n            }\n        })\n        .catch( () => {\n            return reject(null);\n        })\n    })   \n}\n\nexport const getGameAPIData = async (gamePK: number): Promise<IAPIGameDetails> => {\n    return new Promise( (resolve, reject) => {\n        const apiCall = `https://statsapi.web.nhl.com/api/v1/game/${gamePK}/feed/live`;\n        axios.get(apiCall)\n        .then( (json) => {\n            const scoringPlays: number[] = json.data.liveData.plays.scoringPlays;\n            const periodPlays: IPeriodPlay[] = json.data.liveData.plays.playsByPeriod;\n\n            //only consider plays during regular time, i.e. 1st, 2nd, and 3rd period.\n            const lastIndex: number = periodPlays[2].endIndex;\n\n            const spStartIndex = periodPlays[1].startIndex;\n            const spEndIndex = periodPlays[1].endIndex;\n\n            const homeID = json.data.gameData.teams.home.id;\n            const awayID = json.data.gameData.teams.away.id;\n            var missedShots: any = {};\n            missedShots.home = 0;\n            missedShots.away = 0;\n\n\n            var plays: IPlay[] = [];\n            json.data.liveData.plays.allPlays.forEach( (play: any) => {\n                // console.log(\"play: \", play);\n                if (EVENT_IDS.includes(play.result.eventTypeId) && play.about.eventIdx <= lastIndex){\n\n                    const eventIDx = play.about.eventIdx;\n\n                    var coords;\n                    //flip the coords if it's in the 2nd period\n                    if ( spStartIndex <= eventIDx && eventIDx <= spEndIndex) {\n                        // console.log(\"event in 2nd.\");\n\n                        var x = parseInt(play.coordinates.x);\n                        var y = parseInt(play.coordinates.y);\n\n                        // console.log(\"coords pre: \" , { x, y} )\n                        coords = {\n                            x: - x,\n                            y: - y\n                        }\n                        // console.log(\"coords new: \", coords);\n                    }\n                    else {\n                        coords = play.coordinates;\n                    }\n                    const eventTypeID = play.result.eventTypeId;\n                    const teamID = play.team.id;\n                    var players: IPlayer[] = [];\n                    play.players.forEach( (player: any) => {\n                        const playerData: IPlayer = {\n                            id : player.player.id,\n                            fullName : player.player.fullName,\n                            playerType : player.playerType\n                        }\n                        players.push(playerData);\n                    });\n                    const iPlay: IPlay = {\n                        teamID : teamID,\n                        coordinates : coords,\n                        eventIDx : eventIDx,\n                        eventTypeID : eventTypeID,\n                        players: players\n                    }\n\n                    //add to missed shots count\n                    if (iPlay.eventTypeID === 'MISSED_SHOT'){\n                        if (iPlay.teamID === homeID ) {\n                            missedShots.home += 1;\n                        }\n                        else {\n                            missedShots.away += 1;\n                        }\n                    }\n\n                    plays.push(iPlay);\n                }\n            });\n\n            //get homeStats\n            const homeStatsRaw = json.data.liveData.boxscore.teams.home.teamStats.teamSkaterStats;\n\n            const homeGoals = homeStatsRaw.goals;\n            const homeBlocks = homeStatsRaw.blocked;\n            const homeShots = homeStatsRaw.shots;\n            const homeRinkSide = json.data.liveData.linescore.periods[0].home.rinkSide;\n\n            //get home goalie\n            const homeGoalieIDs: number[] = json.data.liveData.boxscore.teams.home.goalies;\n            var homeGoalies: IGoalie[] = [];\n            homeGoalieIDs.forEach( (id: number) =>{\n                const key = `ID${id}`;\n                const goalieRaw = json.data.liveData.boxscore.teams.home.players[key];\n                const goalie: IGoalie = {\n                    id: goalieRaw.person.id,\n                    saves: goalieRaw.stats.goalieStats.saves,\n                    shots: goalieRaw.stats.goalieStats.shots,\n                    savePercentage: goalieRaw.stats.goalieStats.savePercentage\n                }\n                homeGoalies.push(goalie);\n            });\n\n            const homeStats: ITeamStats = {\n                startingRinkSide: homeRinkSide,\n                id : homeID,\n                goals: homeGoals,\n                shots : homeShots,\n                blocks : homeBlocks,\n                goalies : homeGoalies,\n                missed : missedShots.home\n            }\n\n\n            //get awayStats\n            const awayStatsRaw = json.data.liveData.boxscore.teams.away.teamStats.teamSkaterStats;\n\n            const awayGoals = awayStatsRaw.goals;\n            const awayBlocks = awayStatsRaw.blocked;\n            const awayShots = awayStatsRaw.shots;\n            const awayRinkSide = json.data.liveData.linescore.periods[0].away.rinkSide;\n\n            //get away goalie\n            const awayGoalieIDs: number[] = json.data.liveData.boxscore.teams.away.goalies;\n            var awayGoalies: IGoalie[] = [];\n\n            awayGoalieIDs.forEach( (id: number) =>{\n                const key = `ID${id}`;\n                const goalieRaw = json.data.liveData.boxscore.teams.away.players[key];\n                const goalie: IGoalie = {\n                    id: goalieRaw.person.id,\n                    saves: goalieRaw.stats.goalieStats.saves,\n                    shots: goalieRaw.stats.goalieStats.shots,\n                    savePercentage: goalieRaw.stats.goalieStats.savePercentage\n                }\n                awayGoalies.push(goalie);\n            });\n\n            const awayStats: ITeamStats = {\n                startingRinkSide : awayRinkSide,\n                id : awayID,\n                goals: awayGoals,\n                shots: awayShots,\n                blocks: awayBlocks,\n                goalies : awayGoalies,\n                missed : missedShots.away\n            }\n\n            const details: IAPIGameDetails = {\n                gamePK: gamePK,\n                scoringPlays: scoringPlays,\n                periodPlays: periodPlays,\n                allPlays: plays,\n                homeStats: homeStats,\n                awayStats: awayStats\n            }\n            \n            return resolve(details);\n        })\n        .catch( () => {\n            return reject(null);\n        })\n    }) \n}\n\nexport default {getScoresAPIData, getGameAPIData}","import * as d3 from 'd3';\nimport React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { IAPIGameDetails } from '../../util/types/APITypes';\nimport './ShotVisualizer.scss';\n\ninterface IShotVisualizerProps {\n    data: IAPIGameDetails\n}\n\nconst ShotVisualizer = (props: IShotVisualizerProps) => {\n    const ref = useRef<HTMLDivElement>(null);\n\tconst VALID_SHOTS = ['SHOT', 'GOAL'];\n\tconst HOME_COLOUR = 'red';\n\tconst AWAY_COLOUR = 'blue';\n\t//double the width and length of a regular hockey rink\n\tconst RINK_WIDTH = 400\n\tconst RINK_HEIGHT = 168\n\n    useEffect( () => {\n        // console.log(\"initial load\");\n        // clearOldDrawing();\n        console.log(\"props: \" , props.data);\n        props.data != null && drawRink();\n\n        return() => {\n            console.log(\"component dismounting\");\n        }\n    }, []);\n\n    // useEffect( () => {\n    //     console.log(\"prop changed\");\n    //     clearOldDrawing();\n    //     console.log(\"props: \" , props);\n    //     props.data != null && drawRink();\n    // }, [props])\n\n\tconst clearOldDrawing = () => {\n\t\t// d3.select('svg').remove();\n\t}\n\n    const drawRink = () => {\n\n\t\t//define the initial SVG element\n        let svg = d3.select(ref.current)\n            .append(\"div\")\n            // Container class to make it responsive.\n            .classed(\"svg-container\", true) \n            .append('svg')\n            .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n            .attr(\"viewBox\", `0 0 ${RINK_WIDTH + 10} ${RINK_HEIGHT + 10}`)\n               // Class to make it responsive.\n            .classed(\"svg-content-responsive\", true);\n            // .attr('width', RINK_WIDTH + 10)\n            // .attr('height', RINK_HEIGHT + 10);\n\n\t\t//draw the centre ice line\n\t\tdrawVerticalLine(svg, 198,0,RINK_HEIGHT,'red');\n\n\t\t//draw centre ice circle\n\t\tdrawCircle(svg,200,84,30,'red');\n\n\t\t//draw the goals\n\t\tdrawRectangle(svg,22.6,80,8,12,'blue');\n\t\tdrawRectangle(svg,371,80,8,12,'blue');\n\n\t\t//draw the goal lines\n\t\tdrawVerticalLine(svg,22,6,RINK_HEIGHT-12,'red');\n\t\tdrawVerticalLine(svg,378,6,RINK_HEIGHT-12,'red');\n\n\t\t//draw the blue lines\n\t\tdrawVerticalLine(svg,144,0,RINK_HEIGHT,'blue');\n\t\tdrawVerticalLine(svg,252,0,RINK_HEIGHT,'blue');\n\n\t\t//draw the rink outline\n\t\tdrawBaseRink(svg, RINK_HEIGHT, RINK_WIDTH);\n\n\t\t//plot all goals as points\n        plotGoals(svg);\n\n\t\t//create a heatmap for the shots\n        plotShotHeatMap(svg);\n    }\n\n    const plotGoals = (svg:d3.Selection<SVGSVGElement, unknown, null, undefined>) => {\n        props.data.scoringPlays.forEach( (goal) => {\n            const scoringPlay = props.data.allPlays.find ( play => play.eventIDx === goal);\n            if (scoringPlay != null && svg != null) {\n                const colour = scoringPlay.teamID === props.data.homeStats.id ? HOME_COLOUR : AWAY_COLOUR;\n                const coord = rebaseCoordinate(scoringPlay.coordinates);\n\t\t\t\tdrawCircle(svg,coord.x,coord.y,2,colour, colour);\n            }\n        })\n    }\n\n\tconst generateHeatArray = (startCol: number, endCol: number , startRow: number, endRow: number): number[][] => {\n\t\tvar output:number[][] = [];\n        for (let i = startCol ; i < endCol; i++) {\n            for (let j = startRow ; j < endRow; j++) {\n                output.push([i*8, j*8, 0]);\n            }\n        }\n\t\treturn output;\n\t}\n\n\tconst addToHeatArray = (array: number[][], coords: {x: number, y: number}) => {\n\t\tfor (let i = 0 ; i < array.length ; i++) {\n\t\t\tif (coords.x >= array[i][0] && coords.x < (array[i][0]+8)){\n\t\t\t\tif (coords.y >= array[i][1] && coords.y < (array[i][1]+8)){\n\t\t\t\t\tarray[i][2]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst generateColourScale = (colour: string) => {\n\t\treturn d3.scaleLinear<string>()\n\t\t\t.domain([0,4])\n\t\t\t.range(['transparent', colour]);\n\t}\n\n    const plotShotHeatMap = (svg:d3.Selection<SVGSVGElement, unknown, null, undefined>) => {\n\t\tvar heatArrayAway = generateHeatArray(0, 25, 0, 21);\n\t\tvar heatArrayHome = generateHeatArray(25, 50, 0, 21);\n        props.data.allPlays.forEach( (play) => {\n            if (VALID_SHOTS.includes(play.eventTypeID)) {\n                const coords = rebaseCoordinate(play.coordinates);\n\t\t\t\taddToHeatArray(\n\t\t\t\t\tplay.teamID === props.data.homeStats.id ? heatArrayHome : heatArrayAway,\n\t\t\t\t\tcoords);\n            }\n        });\n\n\n        let colorScaleHome = generateColourScale(HOME_COLOUR);\n        let colorScaleAway = generateColourScale(AWAY_COLOUR);\n\n\t\t//add a second layer to draw away shot map\n\t\tvar awayLayer = svg.append('g');\n\n\t\tdrawHeatMap(svg, heatArrayHome,colorScaleHome);\n\t\tdrawHeatMap(awayLayer, heatArrayAway,colorScaleAway);\n    }\n\n\tconst drawHeatMap = (svg:any, heatArray: number[][], colourScale: any) => {\n\t\tsvg.selectAll('rect')\n            .data(heatArray)\n            .enter()\n            .append('rect')\n            .attr('rx', 6)\n            .attr('ry', 6)\n            .attr('x', (d: any) => d[0])\n            .attr('y', (d: any)=> d[1] )\n            .attr('width', 8)\n            .attr('height', 8)\n            .attr('fill', (d: any) => colourScale(d[2]))\n            .attr('opacity', .8)\n\t}\n\n    const rebaseCoordinate = (coord: {x: number , y: number}): {x: number , y: number} => {\n        //consider the starting rink side\n        const homeSide = props.data.homeStats.startingRinkSide;\n\t\tcoord.x = 2*coord.x;\n\t\tcoord.y = 2*coord.y;\n        if (homeSide === \"right\"){\n            coord.x = - coord.x;\n            coord.y = - coord.y;\n        }\n        return {\n            x: coord.x + 200,\n            y: coord.y + 84\n        }\n    }\n\n    const drawBaseRink = (svg:d3.Selection<SVGSVGElement, unknown, null, undefined>, height: number, width: number) => {\n\t\tsvg.append(\"rect\")\n\t\t\t.attr('rx', 45)\n\t\t\t.attr('ry', 45)\n\t\t\t.attr(\"x\", 0)\n\t\t\t.attr(\"y\", 0)\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"width\", width)\n\t\t\t.style('opacity', 1)\n\t\t\t.style(\"stroke\", 'black')\n\t\t\t.style(\"fill\", \"none\")\n\t\t\t.style(\"stroke-width\", 'black');\n    }\n\n    const drawVerticalLine = (svg:d3.Selection<SVGSVGElement, unknown, null, undefined>,\n        x: number, y: number, length: number, colour: string) => {\n\t\tsvg.append('rect')\n\t\t\t.attr('x', x)\n\t\t\t.attr('y', y)\n\t\t\t.attr('height', length)\n\t\t\t.attr('width', '2')\n\t\t\t.style('fill', colour)\n    }\n\n    const drawRectangle = (svg:d3.Selection<SVGSVGElement, unknown, null, undefined>,\n        x: number, y: number, width: number , height: number, colour: string) => {\n        svg.append('rect')\n        .attr('x', x)\n        .attr('y', y)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('stroke', colour)\n        .style(\"stroke-width\", 0.5)\n        .attr('fill', '#89CFF0');\n    }\n\n    const drawCircle =  (svg:d3.Selection<SVGSVGElement, unknown, null, undefined>,\n        x: number, y: number, radius: number, colour: string, fill?: string) => {\n            svg.append('circle')\n            .attr('cx', x)\n            .attr('cy', y)\n            .style(\"stroke-width\", 0.5)\n            .attr('r', radius)\n            .attr('stroke', colour)\n            .attr('fill', fill ? fill : 'transparent');\n        }\n\n    return (\n        <div>\n            <h5>Goals & Shot Distribution</h5>  \n            <div className=\"shot-visualizer-div\" ref={ref}/>\n\n        </div>\n\n    )\n}\n\nexport default ShotVisualizer","import { IAPIGameDetails } from \"./types/APITypes\";\n\nexport const getShootingPercentage = (data: IAPIGameDetails): {home: number, away: number} => {\n    const homePercentage = Math.round(data.homeStats.goals / data.homeStats.shots ) * 100;\n    const awayPercentage = Math.round(data.awayStats.goals / data.awayStats.shots ) * 100;\n    return {\n        home: Math.round(homePercentage * 100) / 100,\n        away: Math.round(awayPercentage * 100) / 100\n    }\n}\n\nexport const getSavePercentage = (data: IAPIGameDetails): {home: number, away: number} => {\n    // if just one goalie played, use their save percentage for the teams' percentage.\n    var homeSavePercent: number = 0;\n    var awaySavePercent: number = 0;\n    if (data.homeStats.goalies.length === 1){\n        homeSavePercent = data.homeStats.goalies[0].savePercentage;\n    }\n    else {\n        //get the average\n        var sum = 0;\n        data.homeStats.goalies.forEach( (goalie) => {\n            sum += goalie.savePercentage;\n        })\n        homeSavePercent = sum / data.homeStats.goalies.length ;\n    }\n\n    if (data.awayStats.goalies.length === 1){\n        awaySavePercent = data.awayStats.goalies[0].savePercentage;\n    }\n    else {\n        var sum = 0;\n        data.awayStats.goalies.forEach( (goalie) => {\n            sum += goalie.savePercentage;\n        })\n        awaySavePercent = sum / data.awayStats.goalies.length ;\n    }\n\n    return {\n        home: Math.round(homeSavePercent * 100) / 100, \n        away: Math.round(awaySavePercent * 100) / 100\n    }\n\n    // if multiple goalies played, get the avg save percentage.\n}\n\nexport const getCorsiForPercent = (data: IAPIGameDetails): {home: number, away: number} => {\n    const homeCF  = data.homeStats.shots + data.homeStats.missed + data.awayStats.blocks;\n    const homeCA = data.awayStats.shots + data.awayStats.missed + data.homeStats.blocks;\n    var homeCorsiPercent = ( homeCF / (homeCF + homeCA ) ) * 100;\n    homeCorsiPercent = Math.round( homeCorsiPercent * 100) / 100\n    const awayCorsiPercent = Math.round( (100 - homeCorsiPercent) * 100) / 100\n    return {\n        home : homeCorsiPercent, \n        away : awayCorsiPercent\n    }\n\n}\n\nexport const getPDO = (data: IAPIGameDetails): {home: number , away:number } => {\n    //PDO = shooting % + save %\n    const savePercentage = getSavePercentage(data);\n    const shootingPercentage = getShootingPercentage(data);\n    return {\n        home : savePercentage.home + shootingPercentage.home,\n        away : savePercentage.away + shootingPercentage.away\n    }\n}","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { IAPIGameDetails, IAPIGameScore } from '../../util/types/APITypes';\nimport './DataTable.scss';\nimport { getCorsiForPercent, getPDO } from '../../util/AnalyticsUtils';\n\ninterface IDataTableProps {\n    gameDetails: IAPIGameDetails\n    gameData: IAPIGameScore\n}\n\nconst DataTable = (props : IDataTableProps) => {\n\n    const getRowData = (homeTeam: boolean) => {\n        const corsi = getCorsiForPercent(props.gameDetails);\n        const pdo = getPDO(props.gameDetails);\n        return {\n            name : homeTeam ? props.gameData.homeTeamName : props.gameData.awayTeamName ,\n            shots : homeTeam ? props.gameDetails.homeStats.shots : props.gameDetails.awayStats.shots ,\n            corsi : (homeTeam ? corsi.home : corsi.away)  + \"%\",\n            pdo : homeTeam ? pdo.home : pdo.away\n        }\n    }\n\n    const rows = [\n        getRowData(true),\n        getRowData(false)\n    ];\n\n    return (\n    <div className=\"table-div\">\n    <h5>Advanced Stats</h5>  \n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Team</TableCell>\n            <TableCell align=\"center\">Shots</TableCell>\n            <TableCell align=\"center\">Corsi For %</TableCell>\n            <TableCell align=\"center\">PDO</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.name}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n              <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"center\">{row.shots}</TableCell>\n              <TableCell align=\"center\">{row.corsi}</TableCell>\n              <TableCell align=\"center\">{row.pdo}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </div>\n    )\n}\n\nexport default DataTable","import React from 'react';\nimport { IAPIGameScore } from \"../../util/types/APITypes\"\n\ninterface IScorebugProps { \n    game: IAPIGameScore\n    index: number\n    cardClicked: (game: IAPIGameScore) => void\n}\n\nconst Scorebug = (props : IScorebugProps) => {\n\n    const IMG_SRC = \"https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/\";\n\n    return (\n        <div key={props.index} className=\"card level-3\" onClick={() => props.cardClicked(props.game)\n        }>\n            <div className=\"teams\">\n                <div className=\"team-display\">\n                  <img alt=\"away team logo\" src={`${IMG_SRC}${props.game.awayTeamID}.svg`} className=\"scorebug-logo\"></img>\n                  <p className='team-name'>{props.game.awayTeamName}</p>\n                </div>\n                <div className=\"score\">\n                  <p>{props.game.awayTeamScore} - {props.game.homeTeamScore} </p>\n                </div>\n                <div className=\"team-display\">\n                  <img alt=\"home team logo\" src={`${IMG_SRC}${props.game.homeTeamID}.svg`} className=\"scorebug-logo\"></img>\n                  <p className='team-name'>{props.game.homeTeamName}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Scorebug;","import { Modal } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { getCorsiForPercent, getPDO } from './util/AnalyticsUtils';\nimport { getGameAPIData, getScoresAPIData }from './util/APIUtils';\nimport { IAPIGameDetails, IAPIGameScore, IAPIScoreResults } from './util/types/APITypes';\nimport ShotVisualizer from './components/ShotVisualizer/ShotVisualizer';\nimport DataTable from './components/DataTable/DataTable';\nimport Scorebug from './components/Scorebug/Scorebug';\n\nconst App = () => {\n\n  const getGameData = async (gamePK: number) => {\n    await getGameAPIData(gamePK)\n    .then( (res) => {\n      setGameData(res);\n    })\n  }\n  const YESTERDAY = new Date(new Date().getTime() - 24*60*60*1000);\n  const WEEKDAYS = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n  const MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const IMG_SRC = \"https://www-league.nhlstatic.com/images/logos/teams-current-primary-light/\";\n\n  const [selectedDate, setSelectedDate] = useState<Date>(YESTERDAY);\n  const [currentGames, setCurrentGames] = useState<IAPIScoreResults|null>(null);\n  const [selectedGame, setSelectedGame] = useState<number>(0);\n  const [selectedGameData, setSelectedGameData] = useState<IAPIGameScore|null>(null);\n  const [gameData, setGameData] = useState<IAPIGameDetails|null>(null);\n\n  const getScores = async () => {\n    const dateToString = selectedDate.toISOString().split('T')[0];\n    await getScoresAPIData(dateToString)\n    .then( (res) => {\n      setCurrentGames(res);\n    })\n  }\n\n  useEffect( () => {\n    if (selectedGame !== 0){\n      getGameData(selectedGame);\n    }\n  }, [selectedGame])\n\n  useEffect( () => {\n    getScores();\n  }, [])\n\n  useEffect( () => {\n    getScores();\n  }, [selectedDate])\n\n  const handlePrevButtonClicked = () => {\n    const newDate = new Date(selectedDate.getTime() - 24*60*60*1000);\n    setSelectedDate(newDate);\n  }\n  const handleNextButtonClicked = () => {\n    const newDate = new Date(selectedDate.getTime() + 24*60*60*1000);\n    setSelectedDate(newDate);\n  }\n\n  const handleCardClicked = (game: IAPIGameScore) => {\n    setSelectedGameData(game);\n    setSelectedGame(game.gamePk);\n  }\n\n  return (\n    <div className=\"App\">\n    <h1>NHL Scoring Visualizer</h1>\n    <p>Pick a game to see some scoring stats.</p>\n\n    <div className=\"day-selector\">\n      <div className=\"day-selector-btn\" onClick={handlePrevButtonClicked}>Previous Day</div>\n      <div className=\"date-display\">\n          <p>{`${WEEKDAYS[selectedDate.getDay()]}, ${MONTHS[selectedDate.getMonth()]} ${selectedDate.getDate()}`}</p>\n      </div>\n\n      <div className={\"day-selector-btn\" + (selectedDate.setHours(0,0,0,0) === YESTERDAY.setHours(0,0,0,0) ?\n       \" hide\" : \"\")}\n        onClick={handleNextButtonClicked}>Next Day\n        </div>\n\n    </div>\n\n    {currentGames && currentGames.games.map( (game, index) => \n\t<Scorebug\n\t\tgame={game}\n\t\tindex={index}\n\t\tcardClicked={handleCardClicked}\n\t/>\n    )}\n\n    {selectedGame !== 0 && gameData && selectedGameData && (\n      <Modal open={selectedGame !== 0}\n      onClose={ () => {\n\t\t  setGameData(null);\n\t\t  setSelectedGame(0);\n\t\t  }}>\n        <div className=\"modal card\">\n\t\t\t<div className=\"teams\">\n\t\t\t\t<div className=\"team-display\">\n\t\t\t\t\t<img alt=\"away team logo\" src={`${IMG_SRC}${selectedGameData.awayTeamID}.svg`} className=\"scorebug-logo\"></img>\n\t\t\t\t\t<p className='team-name'>{selectedGameData.awayTeamName}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"score\">\n\t\t\t\t\t<p>{selectedGameData.awayTeamScore} - {selectedGameData.homeTeamScore} </p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"team-display\">\n\t\t\t\t\t<img alt=\"home team logo\" src={`${IMG_SRC}${selectedGameData.homeTeamID}.svg`} className=\"scorebug-logo\"></img>\n\t\t\t\t\t<p className='team-name'>{selectedGameData.homeTeamName}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ShotVisualizer data={gameData}/>\n\t\t\t<DataTable gameDetails={gameData} gameData={selectedGameData}/>\n        </div>\n      </Modal>\n    )}\n\n    <div className=\"footer\">\n      <p>Made by <a target=\"_blank\" href=\"https://github.com/erictraaaan\">Eric Tran</a> using public data available through the NHL API.</p>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}